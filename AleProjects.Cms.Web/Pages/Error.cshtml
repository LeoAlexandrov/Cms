@page "{code?}"

@using Microsoft.AspNetCore.Mvc.Localization;
@using AleProjects.Cms.Web;
@inject IHtmlLocalizer<SharedResources> SharedLocalizer
@inject IHtmlLocalizer<SharedErrors> ErrorsLocalizer

@model AleProjects.Cms.Web.Pages.ErrorModel

@{
    Layout = "Shared/_BasicLayout.cshtml";

    ViewData["AppBarTitle"] = SharedLocalizer["AppTitle"].Value;

    switch (Model.Code)
    {
        case 404:
            ViewData["AppTitle"] = SharedLocalizer["PageNotFound"].Value + " - " + SharedLocalizer["AppTitle"].Value;
            break;
        default:
            ViewData["AppTitle"] = SharedLocalizer["Error"].Value + " - " + SharedLocalizer["AppTitle"].Value;
            break;
    }
}

@if (Model.Code == 404)
{
    <h3>@ErrorsLocalizer["PageNotFound"]</h3>
    <p class="text-body1">@ErrorsLocalizer["PageNotFoundText"]</p>
}
else
{

    <h3>@ErrorsLocalizer["Error"]</h3>
    <p class="text-body1">@ErrorsLocalizer["ErrorText"]</p>

    @if (Model.ShowRequestId)
    {
        <p class="text-body1"><strong>Request ID:</strong> <code>@Model.RequestId</code></p>
    }
}

@section Scripts
{
    <script>
        const app = Vue.createApp({ data() { return {} }});
        app.use(Quasar, { config: { loadingBar: { color: "info", size: "4px" }}});
        Quasar.lang.set(Quasar.lang.@(SharedLocalizer["Language"]));
        app.mount('#q-app');
    </script>
}