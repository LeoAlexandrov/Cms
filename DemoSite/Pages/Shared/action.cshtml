@using DemoSite.ViewModels
@model HCms.ViewModels.Fragment

@{
	string id = Model.DomId;
	bool jsAction = string.Compare(Model.Props.action_type, "Javascript", StringComparison.InvariantCultureIgnoreCase) == 0;
	string action = Model.Props.action;
	string title = Model.Props.title;
	string altText = Model.Props.altText;
	string icon = Model.Props.icon;
	bool iconLeft = Model.Props.icon_left;
	string target = Model.Props.target;

	if (string.Compare(target, "default", StringComparison.InvariantCultureIgnoreCase) == 0)
		target = null;

	string category = Model.Props.category;

	string cls = category switch
	{
		"default" => jsAction ? "btn btn-lg" : null,
		"primary" => "btn btn-primary btn-lg",
		"secondary" => "btn btn-secondary btn-lg",
		"stretched" => "stretched-link",
		_ => "btn btn-link btn-lg"
	};

	string extraFragmentClass = Model.Attributes?.GetValueOrDefault("bootstrap:class");
}

@if (jsAction)
{
<button id="@id" type="button" class="@Model.CssClass() @cls @extraFragmentClass" onclick="@Html.Raw(action)">
	@if (string.IsNullOrEmpty(icon))
	{
		@title
		
	}
	else if (iconLeft)
	{
		<i class="fa fa-fw @icon"></i> @title
	}
	else
	{
		@title <i class="fa fa-fw @icon"></i>
	}
</button>
}
else
{
<a id="@id" class="@Model.CssClass() @cls @extraFragmentClass" href="@action" alt="@altText" target="@target">
	@if (string.IsNullOrEmpty(icon))
	{
		@title
	}
	else if (iconLeft)
	{
		<i class="fa fa-fw @icon"></i> @title
	}
	else
	{
		@title <i class="fa fa-fw @icon"></i>
	}
</a>
}