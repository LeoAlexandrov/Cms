@using HCms.ViewModels
@model Fragment

@{
	string id = Model.DomId;
	int i = 0;
	int activeIdx = -1;

	int interval = Model.Props.appearance.interval;
	string sInterval = interval == 0 ? "false" : interval.ToString();

	var items = Model.Props.item;

	string extraFragmentClass = Model.Attributes?.GetValueOrDefault("bootstrap:class");
}

<div id="@id" class="carousel carousel-fragment slide carousel-fade breakout @extraFragmentClass" data-mdb-ride="carousel" data-mdb-interval="@sInterval" data-mdb-carousel-init>

	<div class="carousel-indicators">
		@foreach (var item in items)
		{
			if (item.active && activeIdx < 0) 
			{
				activeIdx = i;
			}

			<button type="button" data-mdb-target="#@id" data-mdb-slide-to="@(i++)" class="@(activeIdx == i-1 ? "active" : null)" aria-current="true"></button>
		}
	</div>

	<div class="carousel-inner shadow-4-strong">
		@{
			i = 0;	
		}
		@foreach (var item in items)
		{
			<div class="carousel-item @(i++ == activeIdx ? "active" : null)">
				@{
					await Html.RenderPartialAsync("picture", new Fragment(Model, "picture", item.picture) { Attributes = new() { ["bootstrap:class"] = "d-block w-100" } });
				}
				<div class="carousel-caption d-md-block">
					<div class="text-white">
						@Html.Raw(item.text)					
					</div>
					<div class="my-4">
						@{
							var actions = item.action;

							if (actions != null)
							{
								foreach (var a in actions)
								{
									await Html.RenderPartialAsync("action", new Fragment(Model, "action", a));
								}
							}
						}
					</div>
				</div>
			</div>
		}
	</div>

	@if (Model.Props.appearance.buttons)
	{
		<button class="carousel-control-prev" type="button" data-mdb-target="#@id" data-mdb-slide="prev">
			<span class="carousel-control-prev-icon" aria-hidden="true"></span>
			<span class="visually-hidden">Previous</span>
		</button>
		<button class="carousel-control-next" type="button" data-mdb-target="#@id" data-mdb-slide="next">
			<span class="carousel-control-next-icon" aria-hidden="true"></span>
			<span class="visually-hidden">Next</span>
		</button>
	}
</div>