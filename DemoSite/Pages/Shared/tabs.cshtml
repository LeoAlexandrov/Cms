@using DemoSite.ViewModels
@model HCms.ViewModels.Fragment

@{
	string id = Model.DomId;
	var tabs = Model.Props.tab;
	int n = tabs.Length;
	int m = Model.Children.Length;

	if (m > n)
		m = n;
	else if (m < n)
		n = m;

	int activeIdx = -1;
	int i = 0;
	bool isActive;

	string extraFragmentClass = Model.Attributes?.GetValueOrDefault("bootstrap:class");
}

<div id="@id" class="@Model.CssClass() @extraFragmentClass">
	<ul class="nav nav-tabs" role="tablist">
		@foreach (var tab in tabs)
		{
			isActive = tab.active && activeIdx < 0;
	
			if (isActive)
			{
				activeIdx = i;
			}
	
			<li class="nav-item" role="presentation">
				<a data-mdb-tab-init
					id="@id-tab-@i"
					class="nav-link @(isActive ? "active" : null)"
					href="#@id-tabs-@i" role="tab">
					@if (!string.IsNullOrEmpty(tab.icon))
					{
						<i class="@tab.icon fa-fw me-2"></i>
					}
					@tab.title</a>
			</li>
	
			i++;
	
			if (i >= n)
				break;
		}
	</ul>

@{
	i = 0;
}

<!-- Tabs content -->
	<div id="@id-content" class="tab-content mt-3">
		@foreach (var f in Model.Children)
		{
			<div id="@id-tabs-@i" class="tab-pane fade show @(i == activeIdx ? "active" : null)" role="tabpanel">
				@{
					await Html.RenderPartialAsync(f.XmlName, f);
				}
			</div>
	
			i++;
	
			if (i >= m)
				break;
		}
	</div>
</div>